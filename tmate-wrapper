#!/usr/bin/env bash

set -e

sock=/tmp/tmate.sock

# Usage: slack channel user_to_post_as "message" webhook
slack() {
    curl -sS -o /dev/null -X POST --data-urlencode \
         "payload={\"channel\": \"#$1\", \"username\": \"$2\", \"icon_emoji\": \":$2:\", \"text\": \"$3\"}" $4
}

new_session() {
    tmate -S $sock new-session -d     # Launch tmate in a detached state
    tmate -S $sock wait tmate-ready   # Blocks until the SSH connection is established
}

tmate_address() {
    tmate -S $sock display -p '#{tmate_ssh}' 2>&1
}

help() {
    tmate list-commands
    printf "\ntmate-wrapper enhancements:\n"
    printf "\taddress\n"
    printf "\thelp\n"
    printf "\tslack channel user\n"
    printf "\tversion\n"
}

# Usage: invite channel user
invite() {
    local user=`git config --get user.email | cut -d '@' -f 1`
    local address=`tmate_address`

    if [[ ! -z `echo $address | grep failed` ]]; then
        echo "Failed to connect to tmate server. Is this session dead?"
        exit 1
    fi

    slack $1 pair "Hey, <@$2>...want to pair? Join $user in this <`echo ${address/ /:\/\/}`|tmate session> and this <$DEFAULT_ZOOM|zoom>." $SLACK_WEBHOOK
}

if [[ $# -eq 0 ]]; then
    new_session
    tmate -S $sock attach
elif [[ $1 == "slack" ]]; then
    invite $2 $3
elif [[ $1 == "address" ]]; then
    echo `tmate_address`
elif [[ $1 == "help" || $1 == "-h" ]]; then
    help
elif [[ $1 == "version" || $1 == "-v" ]]; then
    tmate -V
else
    tmate "$@"
fi
